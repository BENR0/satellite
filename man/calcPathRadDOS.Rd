% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/calcPathRadDOS.R
\name{calcPathRadDOS}
\alias{calcPathRadDOS}
\title{Compute path radiance based on the dark object method}
\usage{
calcPathRadDOS(DNmin, bnbr, band_wls, radm, rada, szen, esun, model = "DOS2",
  scat_coef = -4, dos_adjust = 0.01)
}
\arguments{
\item{DNmin}{digital number of dark object in band bnbr (e.g. minimum raw
count of selected raster band bnbr or \code{\link{calcDODN}})}

\item{bnbr}{band number for which DNmin is valid}

\item{band_wls}{band wavelengths for which correction should be made (
data frame with min, max in first, second column, see details)}

\item{radm}{multiplicative coefficient for radiance transformation (i.e. slope)}

\item{rada}{additive coefficient for radiance transformation (i.e. offset)}

\item{esun}{actual (i.e. non-normalized) TOA solar irradianc, e.g. returned
from e.g. \code{\link{calcTOAIrradRadRef}}, \code{\link{calcTOAIrradTable}}
or \code{\link{calcTOAIrradModel}}.}

\item{model}{to be used to correct for 1% scattering (DOS2, DOS4; must be the
same as used by \code{\link{calcAtmosCorr}})
\code{\link{calcTOAIrradRadRef}} with normalization settings equal FALSE}

\item{scat_coef}{scattering coefficient (-4.0, -2.0, -1.0, -0.7, -0.5)}

\item{dos_adjust}{dark object adjustment assuming a reflexion of e.g. 0.01}

\item{cos_szen}{cosine of the sun zenith angle}
}
\value{
Vector object with path radiance values for each band
(W m-2 micrometer-1)
}
\description{
Compute an estimaed path radiance for all sensor band_wls using a dark object
method which can be used to roughly correct the radiance values for
atmospheric scattering.
}
\details{
The dark object substraction approach is based on an approximation
of the atmospheric path radiance (i.e. upwelling radiation which is
scatter into the sensors field of view, aka haze) using the reflectance of a
dark object (i.e. reflectance ~1%).

Chavez (1988) proposed a method which uses the dark object reflectance
in one band to predict the corresponding path radiances in all other band_wls
using a relative radiance model which depends on the wavlelength and overall
atmospheric optical thickness (which is estimated based on the dark object's
DN value). This has the advantage that the path radiance is actually
correlated across different sensor band_wls and not computed individuall for
each band using independent dark objects. He proposed a relative radiance
model which follows a wavelength dependent scattering that ranges from a
power of -4 over -2, -1, -0.7 to -0.5 for very clear over clear, moderate,
hazy to very hazy conditions. The relative factors are computed individually
for each 1/1000 wavelength within each band range and subsequently averaged
over the band as proposed by Goslee (2011).

The atmospheric transmittance towards the sensor (Tv) is approximated by
1.0 (DOS2, Chavez 1996) or rayleigh scattering (DOS4, Moran et al. 1992)

The atmospheric transmittance from the sun (Tz) is approximated by the
cosine of the sun zenith angle (DOS2, Chavez 1996) or again using rayleigh
scattering (DOS4, Moran et al. 1992).

The downwelling diffuse irradiance is approximated by 0.0 (DOS2, Chavez 1996)
or the hemispherical integral of the path radiance (DOS4, Moran et al. 1992).

Equations for the path radiance are taken from Song et al. (2001).

For some sensors, the band wavelengths are already included. See
\code{lutInfo()[grepl("_BANDS", names(lutInfo()$META))]} if your sensor is
included. To retrieve a sensor, use \code{lutInfo()$<Sensor ID>_BANDS}.
}
\examples{
path <- system.file("extdata", package = "satellite")
files <- list.files(path, pattern = glob2rx("LC8*.tif"), full.names = TRUE)
sat <- satellite(files)
sat <- satTOAIrrad(sat, method = "Model")

bcde <- "B002n"
calcPathRadDOS(DNmin = min(getValues(getSatDataLayer(sat, bcde))),
               bnbr = getSatLNBR(sat, bcde),
               band_wls = data.frame(LMIN = getSatLMIN(sat, getSatBCDESolar(sat)),
                                     LMAX = getSatLMAX(sat, getSatBCDESolar(sat))),
               radm = getSatRADM(sat, getSatBCDESolar(sat)),
               rada = getSatRADA(sat, getSatBCDESolar(sat)),
               szen = getSatSZEN(sat, getSatBCDESolar(sat)),
               esun = getSatESUN(sat, getSatBCDESolar(sat)),
               model = "DOS2",
               scat_coef = -4)
}
\references{
Chavez Jr PS (1988) An improved dark-object subtraction technique
for atmospheric scattering correction of multispectral data. Remote Sensing
of Environment 24/3, doi:10.1016/0034-4257(88)90019-3, available online at
 \url{http://www.sciencedirect.com/science/article/pii/0034425788900193}

Chavez Jr PS (1996) Image-based atmospheric corrections revisited and
improved. Photogrammetric Engineering and Remote Sensing 62/9,
available online at
\url{http://www.asprs.org/PE-RS-Journals-1996/PE-RS-September-1996.html}

Goslee SC (2011) Analyzing Remote Sensing Data in R: The landsat
Package. Journal of Statistical Software,43/4, 1-25. URL
\url{http://www.jstatsoft.org/v43/i04/}.

Moran MS, Jackson RD, Slater PN, Teillet PM (1992) Evlauation of simplified
procedures for rretrieval of land surface reflectane factors from satellite
sensor output.Remote Sensing of Environment 41/2-3, 169-184,
doi:10.1016/0034-4257(92)90076-V,
URL \url{http://www.sciencedirect.com/science/article/pii/003442579290076V}.

Song C, Woodcock CE, Seto KC, Lenney MP, Macomber SA (2001) Classification
and Change Detection Using Landsat TM Data: When and How to Correct
Atmospheric Effects? Remote Sensing of Environment 75/2,
doi:10.1016/S0034-4257(00)00169-3, URL
\url{http://www.sciencedirect.com/science/article/pii/S0034425700001693}

If you refer to Sawyer and Stephen 2014, please note that eq. 5 is wrong.
}
\seealso{
This function is used by \code{\link{calcAtmosCorr}} to
compute the path radiance.
}

